digraph G {
  graph [ ratio = "auto", page = "100", compound =true, bgcolor = "#2e3e56" ];
  node [ style = "filled", fillcolor = "#edad56", color = "#edad56", penwidth =3 ];
  edge [ color = "#fcfcfc", penwidth =2, fontname = "helvetica Neue Ultra Light" ];
subgraph "clusterHexaDiamond" {
  graph [ label = "HexaDiamond", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "HexaDiamond.<Constructor>" [ label = "<Constructor>", color = "#FF9797", fillcolor = "#FF9797" ];
  "HexaDiamond.diamondCut" [ label = "diamondCut", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "HexaDiamond.<Fallback>" [ label = "<Fallback>", color = "brown", fillcolor = "#ffbdb9" ];
  "HexaDiamond.<Receive Ether>" [ label = "<Receive Ether>", color = "brown", fillcolor = "#ffbdb9" ];
}

subgraph "clusterLibHexaDiamond" {
  graph [ label = "LibHexaDiamond  (lib)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "LibHexaDiamond.enforceIsContractOwner" [ label = "enforceIsContractOwner", color = "#f2c383", fillcolor = "#f2c383" ];
  "LibHexaDiamond.diamondCut" [ label = "diamondCut", color = "#f2c383", fillcolor = "#f2c383" ];
  "LibHexaDiamond.diamondStorage" [ label = "diamondStorage" ];
  "LibHexaDiamond.setContractOwner" [ label = "setContractOwner", color = "#f2c383", fillcolor = "#f2c383" ];
  "LibHexaDiamond.contractOwner" [ label = "contractOwner", color = "#f2c383", fillcolor = "#f2c383" ];
  "LibHexaDiamond.whenPaused" [ label = "whenPaused", color = "#f2c383", fillcolor = "#f2c383" ];
  "LibHexaDiamond.whenNotPaused" [ label = "whenNotPaused", color = "#f2c383", fillcolor = "#f2c383" ];
  "LibHexaDiamond.addFunctions" [ label = "addFunctions" ];
  "LibHexaDiamond.replaceFunctions" [ label = "replaceFunctions" ];
  "LibHexaDiamond.removeFunctions" [ label = "removeFunctions" ];
  "LibHexaDiamond.addFacet" [ label = "addFacet" ];
  "LibHexaDiamond.addFunction" [ label = "addFunction" ];
  "LibHexaDiamond.removeFunction" [ label = "removeFunction" ];
  "LibHexaDiamond.initializeDiamondCut" [ label = "initializeDiamondCut" ];
  "LibHexaDiamond.enforceHasContractCode" [ label = "enforceHasContractCode" ];
  "LibHexaDiamond._requireCallerIsBOorTroveMorTMLorSP" [ label = "_requireCallerIsBOorTroveMorTMLorSP", color = "#f2c383", fillcolor = "#f2c383" ];
  "LibHexaDiamond._requireCallerIsBorrowerOperationsOrDefaultPool" [ label = "_requireCallerIsBorrowerOperationsOrDefaultPool", color = "#f2c383", fillcolor = "#f2c383" ];
  "LibHexaDiamond._requireCallerIsBorrowerOperations" [ label = "_requireCallerIsBorrowerOperations", color = "#f2c383", fillcolor = "#f2c383" ];
  "LibHexaDiamond._requireCallerIsBOorTroveMorSP" [ label = "_requireCallerIsBOorTroveMorSP", color = "#f2c383", fillcolor = "#f2c383" ];
  "LibHexaDiamond._requireCallerIsBOorTroveM" [ label = "_requireCallerIsBOorTroveM", color = "#f2c383", fillcolor = "#f2c383" ];
  "LibHexaDiamond._requireCallerIsTroveManager" [ label = "_requireCallerIsTroveManager", color = "#f2c383", fillcolor = "#f2c383" ];
  "LibHexaDiamond._requireCallerIsWhitelist" [ label = "_requireCallerIsWhitelist", color = "#f2c383", fillcolor = "#f2c383" ];
  "LibHexaDiamond._requireCallerIsActivePool" [ label = "_requireCallerIsActivePool", color = "#f2c383", fillcolor = "#f2c383" ];
  "LibHexaDiamond._revertWrongFuncCaller" [ label = "_revertWrongFuncCaller" ];
  "LibHexaDiamond.newColls" [ label = "newColls" ];
}

subgraph "clusterIDiamondCut" {
  graph [ label = "IDiamondCut  (iface)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "IDiamondCut.diamondCut" [ label = "diamondCut", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
}

subgraph "clusterIWhitelist" {
  graph [ label = "IWhitelist  (iface)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "IWhitelist.getValidCollateral" [ label = "getValidCollateral", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWhitelist.setAddresses" [ label = "setAddresses", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWhitelist.isValidRouter" [ label = "isValidRouter", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWhitelist.getOracle" [ label = "getOracle", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWhitelist.getRatio" [ label = "getRatio", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWhitelist.getIsActive" [ label = "getIsActive", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWhitelist.getPriceCurve" [ label = "getPriceCurve", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWhitelist.getDecimals" [ label = "getDecimals", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWhitelist.getFee" [ label = "getFee", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWhitelist.getFeeAndUpdate" [ label = "getFeeAndUpdate", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWhitelist.getIndex" [ label = "getIndex", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWhitelist.isWrapped" [ label = "isWrapped", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWhitelist.setDefaultRouter" [ label = "setDefaultRouter", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWhitelist.getValueVC" [ label = "getValueVC", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWhitelist.getValueUSD" [ label = "getValueUSD", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWhitelist.getDefaultRouterAddress" [ label = "getDefaultRouterAddress", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
}

subgraph "clusterStrings" {
  graph [ label = "Strings  (lib)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "Strings.length" [ label = "length", color = "#f2c383", fillcolor = "#f2c383" ];
  "Strings.append" [ label = "append", color = "#f2c383", fillcolor = "#f2c383" ];
  "Strings.slice" [ label = "slice", color = "#f2c383", fillcolor = "#f2c383" ];
  "Strings.upper" [ label = "upper", color = "#f2c383", fillcolor = "#f2c383" ];
}

subgraph "clusterDefaultPool" {
  graph [ label = "DefaultPool", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "DefaultPool.setAddresses" [ label = "setAddresses", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "DefaultPool.getCollateral" [ label = "getCollateral", color = "#FF9797", fillcolor = "#FF9797" ];
  "DefaultPool.getAllCollateral" [ label = "getAllCollateral", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "DefaultPool.getCollateralVC" [ label = "getCollateralVC", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "DefaultPool.getVC" [ label = "getVC", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "DefaultPool.getUSMDebt" [ label = "getUSMDebt", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "DefaultPool._sendCollateral" [ label = "_sendCollateral", color = "#f2c383", fillcolor = "#f2c383" ];
  "DefaultPool.sendCollsToActivePool" [ label = "sendCollsToActivePool", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "DefaultPool.increaseUSMDebt" [ label = "increaseUSMDebt", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "DefaultPool.decreaseUSMDebt" [ label = "decreaseUSMDebt", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "DefaultPool.receiveCollateral" [ label = "receiveCollateral", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "DefaultPool.addCollateralType" [ label = "addCollateralType", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "DefaultPool.getName" [ label = "getName", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "DefaultPool.checkContract" [ label = "checkContract" ];
  "DefaultPool._leftSumColls" [ label = "_leftSumColls" ];
}

subgraph "clusterIDefaultPool" {
  graph [ label = "IDefaultPool  (iface)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "IDefaultPool.sendCollsToActivePool" [ label = "sendCollsToActivePool", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IDefaultPool.addCollateralType" [ label = "addCollateralType", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IDefaultPool.getCollateralVC" [ label = "getCollateralVC", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
}

subgraph "clusterIPool" {
  graph [ label = "IPool  (iface)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "IPool.getVC" [ label = "getVC", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IPool.getCollateral" [ label = "getCollateral", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IPool.getAllCollateral" [ label = "getAllCollateral", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IPool.getUSMDebt" [ label = "getUSMDebt", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IPool.increaseUSMDebt" [ label = "increaseUSMDebt", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IPool.decreaseUSMDebt" [ label = "decreaseUSMDebt", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
}

subgraph "clusterICollateralReceiver" {
  graph [ label = "ICollateralReceiver  (iface)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "ICollateralReceiver.receiveCollateral" [ label = "receiveCollateral", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
}

subgraph "clusterIActivePool" {
  graph [ label = "IActivePool  (iface)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "IActivePool.sendCollaterals" [ label = "sendCollaterals", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IActivePool.sendCollateralsUnwrap" [ label = "sendCollateralsUnwrap", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IActivePool.sendSingleCollateral" [ label = "sendSingleCollateral", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IActivePool.sendSingleCollateralUnwrap" [ label = "sendSingleCollateralUnwrap", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IActivePool.getCollateralVC" [ label = "getCollateralVC", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IActivePool.addCollateralType" [ label = "addCollateralType", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
}

subgraph "clusterIERC20" {
  graph [ label = "IERC20  (iface)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "IERC20.totalSupply" [ label = "totalSupply", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC20.balanceOf" [ label = "balanceOf", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC20.transfer" [ label = "transfer", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC20.allowance" [ label = "allowance" ];
  "IERC20.approve" [ label = "approve", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC20.transferFrom" [ label = "transferFrom", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC20.functionCall" [ label = "functionCall" ];
}

subgraph "clusterIWAsset" {
  graph [ label = "IWAsset  (iface)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "IWAsset.wrap" [ label = "wrap", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWAsset.unwrapFor" [ label = "unwrapFor", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWAsset.updateReward" [ label = "updateReward", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWAsset.claimReward" [ label = "claimReward", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWAsset.claimRewardFor" [ label = "claimRewardFor", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWAsset.getPendingRewards" [ label = "getPendingRewards", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IWAsset.endTreasuryReward" [ label = "endTreasuryReward", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
}

subgraph "clusterOwnable" {
  graph [ label = "Ownable", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "Ownable.<Constructor>" [ label = "<Constructor>", color = "#FF9797", fillcolor = "#FF9797" ];
  "Ownable.owner" [ label = "owner" ];
  "Ownable.onlyOwner" [ label = "onlyOwner", color = "#1bc6a6", shape =doubleoctagon ];
  "Ownable.renounceOwnership" [ label = "renounceOwnership", color = "#FF9797", fillcolor = "#FF9797" ];
  "Ownable.transferOwnership" [ label = "transferOwnership", color = "#FF9797", fillcolor = "#FF9797" ];
  "Ownable._transferOwnership" [ label = "_transferOwnership" ];
  "Ownable._msgSender" [ label = "_msgSender" ];
}

subgraph "clusterContext" {
  graph [ label = "Context", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "Context._msgSender" [ label = "_msgSender", color = "#f2c383", fillcolor = "#f2c383" ];
  "Context._msgData" [ label = "_msgData", color = "#f2c383", fillcolor = "#f2c383" ];
}

subgraph "clusterCheckContract" {
  graph [ label = "CheckContract", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "CheckContract.checkContract" [ label = "checkContract", color = "#f2c383", fillcolor = "#f2c383" ];
}

subgraph "clusterHexaCustomBase" {
  graph [ label = "HexaCustomBase", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "HexaCustomBase._sumColls" [ label = "_sumColls", color = "#f2c383", fillcolor = "#f2c383" ];
  "HexaCustomBase._leftSumColls" [ label = "_leftSumColls", color = "#f2c383", fillcolor = "#f2c383" ];
  "HexaCustomBase._leftSubColls" [ label = "_leftSubColls", color = "#f2c383", fillcolor = "#f2c383" ];
  "HexaCustomBase._subColls" [ label = "_subColls", color = "#f2c383", fillcolor = "#f2c383" ];
  "HexaCustomBase._getArrayCopy" [ label = "_getArrayCopy" ];
}

subgraph "clusterBaseMath" {
  graph [ label = "BaseMath", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
}

subgraph "clusterSafeERC20" {
  graph [ label = "SafeERC20  (lib)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "SafeERC20.safeTransfer" [ label = "safeTransfer", color = "#f2c383", fillcolor = "#f2c383" ];
  "SafeERC20.safeTransferFrom" [ label = "safeTransferFrom", color = "#f2c383", fillcolor = "#f2c383" ];
  "SafeERC20.safeApprove" [ label = "safeApprove", color = "#f2c383", fillcolor = "#f2c383" ];
  "SafeERC20.safeIncreaseAllowance" [ label = "safeIncreaseAllowance", color = "#f2c383", fillcolor = "#f2c383" ];
  "SafeERC20.safeDecreaseAllowance" [ label = "safeDecreaseAllowance", color = "#f2c383", fillcolor = "#f2c383" ];
  "SafeERC20._callOptionalReturn" [ label = "_callOptionalReturn" ];
}

subgraph "clusterAddress" {
  graph [ label = "Address  (lib)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "Address.isContract" [ label = "isContract" ];
  "Address.sendValue" [ label = "sendValue", color = "#f2c383", fillcolor = "#f2c383" ];
  "Address.functionCall" [ label = "functionCall" ];
  "Address.functionCallWithValue" [ label = "functionCallWithValue" ];
  "Address.functionStaticCall" [ label = "functionStaticCall" ];
  "Address.functionDelegateCall" [ label = "functionDelegateCall" ];
  "Address.verifyCallResult" [ label = "verifyCallResult" ];
}

subgraph "clusterActivePool" {
  graph [ label = "ActivePool", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "ActivePool.setAddresses" [ label = "setAddresses", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ActivePool.getCollateral" [ label = "getCollateral", color = "#FF9797", fillcolor = "#FF9797" ];
  "ActivePool.getAllCollateral" [ label = "getAllCollateral", color = "#FF9797", fillcolor = "#FF9797" ];
  "ActivePool.getCollateralVC" [ label = "getCollateralVC", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ActivePool.getVC" [ label = "getVC", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ActivePool.getUSMDebt" [ label = "getUSMDebt", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ActivePool._sendCollateral" [ label = "_sendCollateral", color = "#f2c383", fillcolor = "#f2c383" ];
  "ActivePool.sendCollaterals" [ label = "sendCollaterals", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ActivePool.sendCollateralsUnwrap" [ label = "sendCollateralsUnwrap", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ActivePool.sendSingleCollateral" [ label = "sendSingleCollateral", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ActivePool.sendSingleCollateralUnwrap" [ label = "sendSingleCollateralUnwrap", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ActivePool._needsUpdateCollateral" [ label = "_needsUpdateCollateral" ];
  "ActivePool.increaseUSMDebt" [ label = "increaseUSMDebt", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ActivePool.decreaseUSMDebt" [ label = "decreaseUSMDebt", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ActivePool.receiveCollateral" [ label = "receiveCollateral", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ActivePool.addCollateralType" [ label = "addCollateralType", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ActivePool.getName" [ label = "getName", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ActivePool.checkContract" [ label = "checkContract" ];
}

subgraph "cluster_init" {
  graph [ label = "_init", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "_init.delegatecall" [ label = "delegatecall" ];
}

subgraph "clustertarget" {
  graph [ label = "target", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "target.staticcall" [ label = "staticcall" ];
  "target.delegatecall" [ label = "delegatecall" ];
}

  "HexaDiamond.diamondCut";
  "LibHexaDiamond.enforceIsContractOwner";
  "LibHexaDiamond.diamondCut";
  "LibHexaDiamond.setContractOwner";
  "LibHexaDiamond.diamondStorage";
  "LibHexaDiamond.contractOwner";
  "LibHexaDiamond.whenPaused";
  "LibHexaDiamond.whenNotPaused";
  "LibHexaDiamond.addFunctions";
  "LibHexaDiamond.replaceFunctions";
  "LibHexaDiamond.removeFunctions";
  "LibHexaDiamond.initializeDiamondCut";
  "LibHexaDiamond.addFacet";
  "LibHexaDiamond.addFunction";
  "LibHexaDiamond.removeFunction";
  "LibHexaDiamond.enforceHasContractCode";
  "_init.delegatecall";
  "LibHexaDiamond._requireCallerIsBOorTroveMorTMLorSP";
  "LibHexaDiamond._revertWrongFuncCaller";
  "LibHexaDiamond._requireCallerIsBorrowerOperationsOrDefaultPool";
  "LibHexaDiamond._requireCallerIsBorrowerOperations";
  "LibHexaDiamond._requireCallerIsBOorTroveMorSP";
  "LibHexaDiamond._requireCallerIsBOorTroveM";
  "LibHexaDiamond._requireCallerIsTroveManager";
  "LibHexaDiamond._requireCallerIsWhitelist";
  "LibHexaDiamond._requireCallerIsActivePool";
  "DefaultPool.setAddresses";
  "DefaultPool.checkContract";
  "DefaultPool.getCollateral";
  "DefaultPool.getAllCollateral";
  "DefaultPool.getCollateralVC";
  "DefaultPool.getVC";
  "DefaultPool.getUSMDebt";
  "DefaultPool._sendCollateral";
  "DefaultPool.sendCollsToActivePool";
  "DefaultPool.increaseUSMDebt";
  "DefaultPool.decreaseUSMDebt";
  "DefaultPool.receiveCollateral";
  "DefaultPool._leftSumColls";
  "DefaultPool.addCollateralType";
  "Ownable.<Constructor>";
  "Ownable._transferOwnership";
  "Ownable._msgSender";
  "Ownable.onlyOwner";
  "Ownable.owner";
  "Ownable.renounceOwnership";
  "Ownable.transferOwnership";
  "HexaCustomBase._sumColls";
  "LibHexaDiamond.newColls";
  "HexaCustomBase._leftSumColls";
  "HexaCustomBase._getArrayCopy";
  "HexaCustomBase._leftSubColls";
  "HexaCustomBase._subColls";
  "SafeERC20.safeTransfer";
  "SafeERC20._callOptionalReturn";
  "SafeERC20.safeTransferFrom";
  "SafeERC20.safeApprove";
  "IERC20.allowance";
  "SafeERC20.safeIncreaseAllowance";
  "SafeERC20.safeDecreaseAllowance";
  "IERC20.functionCall";
  "Address.functionCall";
  "Address.functionCallWithValue";
  "Address.isContract";
  "Address.verifyCallResult";
  "Address.functionStaticCall";
  "target.staticcall";
  "Address.functionDelegateCall";
  "target.delegatecall";
  "ActivePool.setAddresses";
  "ActivePool.checkContract";
  "ActivePool.getCollateral";
  "ActivePool.getAllCollateral";
  "ActivePool.getCollateralVC";
  "ActivePool.getVC";
  "ActivePool.getUSMDebt";
  "ActivePool._sendCollateral";
  "ActivePool.sendCollaterals";
  "ActivePool._needsUpdateCollateral";
  "ActivePool.sendCollateralsUnwrap";
  "ActivePool.sendSingleCollateral";
  "ActivePool.sendSingleCollateralUnwrap";
  "ActivePool.increaseUSMDebt";
  "ActivePool.decreaseUSMDebt";
  "ActivePool.receiveCollateral";
  "ActivePool.addCollateralType";
  "HexaDiamond.diamondCut" -> "LibHexaDiamond.enforceIsContractOwner" [ color = "white" ];
  "HexaDiamond.diamondCut" -> "LibHexaDiamond.diamondCut" [ color = "white" ];
  "LibHexaDiamond.setContractOwner" -> "LibHexaDiamond.diamondStorage" [ color = "#1bc6a6" ];
  "LibHexaDiamond.contractOwner" -> "LibHexaDiamond.diamondStorage" [ color = "#1bc6a6" ];
  "LibHexaDiamond.enforceIsContractOwner" -> "LibHexaDiamond.diamondStorage" [ color = "#1bc6a6" ];
  "LibHexaDiamond.whenPaused" -> "LibHexaDiamond.diamondStorage" [ color = "#1bc6a6" ];
  "LibHexaDiamond.whenNotPaused" -> "LibHexaDiamond.diamondStorage" [ color = "#1bc6a6" ];
  "LibHexaDiamond.diamondCut" -> "LibHexaDiamond.addFunctions" [ color = "#1bc6a6" ];
  "LibHexaDiamond.diamondCut" -> "LibHexaDiamond.replaceFunctions" [ color = "#1bc6a6" ];
  "LibHexaDiamond.diamondCut" -> "LibHexaDiamond.removeFunctions" [ color = "#1bc6a6" ];
  "LibHexaDiamond.diamondCut" -> "LibHexaDiamond.initializeDiamondCut" [ color = "#1bc6a6" ];
  "LibHexaDiamond.addFunctions" -> "LibHexaDiamond.diamondStorage" [ color = "#1bc6a6" ];
  "LibHexaDiamond.addFunctions" -> "LibHexaDiamond.addFacet" [ color = "#1bc6a6" ];
  "LibHexaDiamond.addFunctions" -> "LibHexaDiamond.addFunction" [ color = "#1bc6a6" ];
  "LibHexaDiamond.replaceFunctions" -> "LibHexaDiamond.diamondStorage" [ color = "#1bc6a6" ];
  "LibHexaDiamond.replaceFunctions" -> "LibHexaDiamond.addFacet" [ color = "#1bc6a6" ];
  "LibHexaDiamond.replaceFunctions" -> "LibHexaDiamond.removeFunction" [ color = "#1bc6a6" ];
  "LibHexaDiamond.replaceFunctions" -> "LibHexaDiamond.addFunction" [ color = "#1bc6a6" ];
  "LibHexaDiamond.removeFunctions" -> "LibHexaDiamond.diamondStorage" [ color = "#1bc6a6" ];
  "LibHexaDiamond.removeFunctions" -> "LibHexaDiamond.removeFunction" [ color = "#1bc6a6" ];
  "LibHexaDiamond.addFacet" -> "LibHexaDiamond.enforceHasContractCode" [ color = "#1bc6a6" ];
  "LibHexaDiamond.initializeDiamondCut" -> "LibHexaDiamond.enforceHasContractCode" [ color = "#1bc6a6" ];
  "LibHexaDiamond.initializeDiamondCut" -> "_init.delegatecall" [ color = "white" ];
  "LibHexaDiamond._requireCallerIsBOorTroveMorTMLorSP" -> "LibHexaDiamond.diamondStorage" [ color = "#1bc6a6" ];
  "LibHexaDiamond._requireCallerIsBOorTroveMorTMLorSP" -> "LibHexaDiamond._revertWrongFuncCaller" [ color = "#1bc6a6" ];
  "LibHexaDiamond._requireCallerIsBorrowerOperationsOrDefaultPool" -> "LibHexaDiamond.diamondStorage" [ color = "#1bc6a6" ];
  "LibHexaDiamond._requireCallerIsBorrowerOperationsOrDefaultPool" -> "LibHexaDiamond._revertWrongFuncCaller" [ color = "#1bc6a6" ];
  "LibHexaDiamond._requireCallerIsBorrowerOperations" -> "LibHexaDiamond.diamondStorage" [ color = "#1bc6a6" ];
  "LibHexaDiamond._requireCallerIsBorrowerOperations" -> "LibHexaDiamond._revertWrongFuncCaller" [ color = "#1bc6a6" ];
  "LibHexaDiamond._requireCallerIsBOorTroveMorSP" -> "LibHexaDiamond.diamondStorage" [ color = "#1bc6a6" ];
  "LibHexaDiamond._requireCallerIsBOorTroveMorSP" -> "LibHexaDiamond._revertWrongFuncCaller" [ color = "#1bc6a6" ];
  "LibHexaDiamond._requireCallerIsBOorTroveM" -> "LibHexaDiamond.diamondStorage" [ color = "#1bc6a6" ];
  "LibHexaDiamond._requireCallerIsBOorTroveM" -> "LibHexaDiamond._revertWrongFuncCaller" [ color = "#1bc6a6" ];
  "LibHexaDiamond._requireCallerIsTroveManager" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "LibHexaDiamond._requireCallerIsTroveManager" -> "LibHexaDiamond._revertWrongFuncCaller" [ color = "#1bc6a6" ];
  "LibHexaDiamond._requireCallerIsWhitelist" -> "LibHexaDiamond.diamondStorage" [ color = "#1bc6a6" ];
  "LibHexaDiamond._requireCallerIsWhitelist" -> "LibHexaDiamond._revertWrongFuncCaller" [ color = "#1bc6a6" ];
  "LibHexaDiamond._requireCallerIsActivePool" -> "LibHexaDiamond.diamondStorage" [ color = "#1bc6a6" ];
  "LibHexaDiamond._requireCallerIsActivePool" -> "LibHexaDiamond._revertWrongFuncCaller" [ color = "#1bc6a6" ];
  "DefaultPool.setAddresses" -> "DefaultPool.checkContract" [ color = "#1bc6a6" ];
  "DefaultPool.setAddresses" -> "DefaultPool.checkContract" [ color = "#1bc6a6" ];
  "DefaultPool.setAddresses" -> "DefaultPool.checkContract" [ color = "#1bc6a6" ];
  "DefaultPool.setAddresses" -> "DefaultPool.checkContract" [ color = "#1bc6a6" ];
  "DefaultPool.setAddresses" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "DefaultPool.getCollateral" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "DefaultPool.getAllCollateral" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "DefaultPool.getCollateralVC" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "DefaultPool.getCollateralVC" -> "DefaultPool.getCollateral" [ color = "#1bc6a6" ];
  "DefaultPool.getVC" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "DefaultPool.getUSMDebt" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "DefaultPool._sendCollateral" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "DefaultPool.sendCollsToActivePool" -> "LibHexaDiamond._requireCallerIsTroveManager" [ color = "white" ];
  "DefaultPool.sendCollsToActivePool" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "DefaultPool.sendCollsToActivePool" -> "DefaultPool._sendCollateral" [ color = "#1bc6a6" ];
  "DefaultPool.sendCollsToActivePool" -> "DefaultPool._sendCollateral" [ color = "#1bc6a6" ];
  "DefaultPool.increaseUSMDebt" -> "LibHexaDiamond._requireCallerIsTroveManager" [ color = "white" ];
  "DefaultPool.increaseUSMDebt" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "DefaultPool.decreaseUSMDebt" -> "LibHexaDiamond._requireCallerIsTroveManager" [ color = "white" ];
  "DefaultPool.decreaseUSMDebt" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "DefaultPool.receiveCollateral" -> "LibHexaDiamond._requireCallerIsActivePool" [ color = "white" ];
  "DefaultPool.receiveCollateral" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "DefaultPool.receiveCollateral" -> "DefaultPool._leftSumColls" [ color = "#1bc6a6" ];
  "DefaultPool.addCollateralType" -> "LibHexaDiamond._requireCallerIsWhitelist" [ color = "white" ];
  "DefaultPool.addCollateralType" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "Ownable.<Constructor>" -> "Ownable._transferOwnership" [ color = "#1bc6a6" ];
  "Ownable.<Constructor>" -> "Ownable._msgSender" [ color = "#1bc6a6" ];
  "Ownable.onlyOwner" -> "Ownable.owner" [ color = "#1bc6a6" ];
  "Ownable.onlyOwner" -> "Ownable._msgSender" [ color = "#1bc6a6" ];
  "Ownable.renounceOwnership" -> "Ownable._transferOwnership" [ color = "#1bc6a6" ];
  "Ownable.transferOwnership" -> "Ownable._transferOwnership" [ color = "#1bc6a6" ];
  "HexaCustomBase._sumColls" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "HexaCustomBase._sumColls" -> "LibHexaDiamond.newColls" [ color = "white" ];
  "HexaCustomBase._sumColls" -> "HexaCustomBase._sumColls" [ color = "#1bc6a6" ];
  "HexaCustomBase._sumColls" -> "LibHexaDiamond.newColls" [ color = "white" ];
  "HexaCustomBase._sumColls" -> "HexaCustomBase._sumColls" [ color = "#1bc6a6" ];
  "HexaCustomBase._leftSumColls" -> "HexaCustomBase._getArrayCopy" [ color = "#1bc6a6" ];
  "HexaCustomBase._leftSumColls" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "HexaCustomBase._leftSubColls" -> "HexaCustomBase._getArrayCopy" [ color = "#1bc6a6" ];
  "HexaCustomBase._leftSubColls" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "HexaCustomBase._subColls" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "SafeERC20.safeTransfer" -> "SafeERC20._callOptionalReturn" [ color = "#1bc6a6" ];
  "SafeERC20.safeTransferFrom" -> "SafeERC20._callOptionalReturn" [ color = "#1bc6a6" ];
  "SafeERC20.safeApprove" -> "IERC20.allowance" [ color = "white" ];
  "SafeERC20.safeApprove" -> "SafeERC20._callOptionalReturn" [ color = "#1bc6a6" ];
  "SafeERC20.safeIncreaseAllowance" -> "IERC20.allowance" [ color = "white" ];
  "SafeERC20.safeIncreaseAllowance" -> "SafeERC20._callOptionalReturn" [ color = "#1bc6a6" ];
  "SafeERC20.safeDecreaseAllowance" -> "IERC20.allowance" [ color = "white" ];
  "SafeERC20.safeDecreaseAllowance" -> "SafeERC20._callOptionalReturn" [ color = "#1bc6a6" ];
  "SafeERC20._callOptionalReturn" -> "IERC20.functionCall" [ color = "white" ];
  "Address.functionCall" -> "Address.functionCall" [ color = "#1bc6a6" ];
  "Address.functionCall" -> "Address.functionCallWithValue" [ color = "#1bc6a6" ];
  "Address.functionCallWithValue" -> "Address.functionCallWithValue" [ color = "#1bc6a6" ];
  "Address.functionCallWithValue" -> "Address.isContract" [ color = "#1bc6a6" ];
  "Address.functionCallWithValue" -> "Address.verifyCallResult" [ color = "#1bc6a6" ];
  "Address.functionStaticCall" -> "Address.functionStaticCall" [ color = "#1bc6a6" ];
  "Address.functionStaticCall" -> "Address.isContract" [ color = "#1bc6a6" ];
  "Address.functionStaticCall" -> "target.staticcall" [ color = "white" ];
  "Address.functionStaticCall" -> "Address.verifyCallResult" [ color = "#1bc6a6" ];
  "Address.functionDelegateCall" -> "Address.functionDelegateCall" [ color = "#1bc6a6" ];
  "Address.functionDelegateCall" -> "Address.isContract" [ color = "#1bc6a6" ];
  "Address.functionDelegateCall" -> "target.delegatecall" [ color = "white" ];
  "Address.functionDelegateCall" -> "Address.verifyCallResult" [ color = "#1bc6a6" ];
  "ActivePool.setAddresses" -> "ActivePool.checkContract" [ color = "#1bc6a6" ];
  "ActivePool.setAddresses" -> "ActivePool.checkContract" [ color = "#1bc6a6" ];
  "ActivePool.setAddresses" -> "ActivePool.checkContract" [ color = "#1bc6a6" ];
  "ActivePool.setAddresses" -> "ActivePool.checkContract" [ color = "#1bc6a6" ];
  "ActivePool.setAddresses" -> "ActivePool.checkContract" [ color = "#1bc6a6" ];
  "ActivePool.setAddresses" -> "ActivePool.checkContract" [ color = "#1bc6a6" ];
  "ActivePool.setAddresses" -> "ActivePool.checkContract" [ color = "#1bc6a6" ];
  "ActivePool.setAddresses" -> "ActivePool.checkContract" [ color = "#1bc6a6" ];
  "ActivePool.setAddresses" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "ActivePool.getCollateral" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "ActivePool.getAllCollateral" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "ActivePool.getCollateralVC" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "ActivePool.getCollateralVC" -> "ActivePool.getCollateral" [ color = "#1bc6a6" ];
  "ActivePool.getVC" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "ActivePool.getUSMDebt" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "ActivePool._sendCollateral" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "ActivePool.sendCollaterals" -> "LibHexaDiamond._requireCallerIsBOorTroveMorTMLorSP" [ color = "white" ];
  "ActivePool.sendCollaterals" -> "ActivePool._sendCollateral" [ color = "#1bc6a6" ];
  "ActivePool.sendCollaterals" -> "ActivePool._needsUpdateCollateral" [ color = "#1bc6a6" ];
  "ActivePool.sendCollateralsUnwrap" -> "LibHexaDiamond._requireCallerIsBOorTroveMorTMLorSP" [ color = "white" ];
  "ActivePool.sendCollateralsUnwrap" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "ActivePool.sendCollateralsUnwrap" -> "ActivePool._sendCollateral" [ color = "#1bc6a6" ];
  "ActivePool.sendSingleCollateral" -> "LibHexaDiamond._requireCallerIsBorrowerOperations" [ color = "white" ];
  "ActivePool.sendSingleCollateral" -> "ActivePool._sendCollateral" [ color = "#1bc6a6" ];
  "ActivePool.sendSingleCollateralUnwrap" -> "LibHexaDiamond._requireCallerIsBorrowerOperations" [ color = "white" ];
  "ActivePool.sendSingleCollateralUnwrap" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "ActivePool.sendSingleCollateralUnwrap" -> "ActivePool._sendCollateral" [ color = "#1bc6a6" ];
  "ActivePool._needsUpdateCollateral" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "ActivePool.increaseUSMDebt" -> "LibHexaDiamond._requireCallerIsBOorTroveM" [ color = "white" ];
  "ActivePool.increaseUSMDebt" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "ActivePool.decreaseUSMDebt" -> "LibHexaDiamond._requireCallerIsBOorTroveMorSP" [ color = "white" ];
  "ActivePool.decreaseUSMDebt" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "ActivePool.receiveCollateral" -> "LibHexaDiamond._requireCallerIsBorrowerOperationsOrDefaultPool" [ color = "white" ];
  "ActivePool.receiveCollateral" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];
  "ActivePool.receiveCollateral" -> "HexaCustomBase._leftSumColls" [ color = "#1bc6a6" ];
  "ActivePool.addCollateralType" -> "LibHexaDiamond._requireCallerIsWhitelist" [ color = "white" ];
  "ActivePool.addCollateralType" -> "LibHexaDiamond.diamondStorage" [ color = "white" ];


rankdir=LR
node [shape=plaintext]
subgraph cluster_01 { 
label = "Legend";
key [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td align="right" port="i1">Internal Call</td></tr>
  <tr><td align="right" port="i2">External Call</td></tr>
  <tr><td align="right" port="i3">Defined Contract</td></tr>
  <tr><td align="right" port="i4">Undefined Contract</td></tr>
  </table>>]
key2 [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td port="i1">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i2">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i3" bgcolor="#445773">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i4">
    <table border="1" cellborder="0" cellspacing="0" cellpadding="7" color="#e8726d">
      <tr>
       <td></td>
      </tr>
     </table>
  </td></tr>
  </table>>]
key:i1:e -> key2:i1:w [color="#1bc6a6"]
key:i2:e -> key2:i2:w [color="white"]
}
}
